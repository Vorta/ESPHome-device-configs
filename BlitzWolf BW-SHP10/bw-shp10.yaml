substitutions:
  esp_device_name: "bw-shp10-1"      # Change to match the name of the YAML file
  device_type: "BlitzWolf BW-SHP10"  # Don't change

  device_name: "Your Device Name"    # Set your device name
  device_id: "your_device_id"        # Set your device ID (will be used in Home Assistant)
  device_ip: 192.168.0.13            # Modify

  max_temp: "80.0"

# Checklist:
# Make sure you have wifi_ssid, wifi_password and ota_password secrets set
# Make sure you scroll down to manual_ip and set correct gateway and subnet for your network
# Make sure you have set a correct static IP for your device above

esphome:
  name: "${esp_device_name}"
  platform: ESP8266
  board: esp01_1m
  comment: "${device_type}"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  ap:
    ssid: "ESPHome (${device_name})"
    password: !secret wifi_password
    
  manual_ip:
    static_ip: ${device_ip}
    gateway: 192.168.0.1
    subnet: 255.255.255.0

# Enable logging
logger:
  hardware_uart: UART0_SWAP

# Enable Home Assistant API
api:

ota:
  password: !secret ota_password

time:
  - platform: homeassistant
  
captive_portal:

uart:
  id: uart_bus
  tx_pin: GPIO1
  rx_pin: GPIO3
  baud_rate: 4800
  stop_bits: 1

button:
  - platform: restart
    name: "${device_name} Restart"
    id: "${device_id}_restart_button"

switch:
  - platform: gpio
    name: "${device_name} Switch"
    id: "${device_id}_switch"
    icon: "mdi:power-socket-de"
    pin: GPIO5
    restore_mode: RESTORE_DEFAULT_OFF

sensor:
  - platform: wifi_signal
    name: "${device_name} Signal"
    id: "${device_id}_signal"
    device_class: signal_strength
    update_interval: 60s
    entity_category: diagnostic
    
  - platform: bl0940
    uart_id: uart_bus
    voltage:
      name: "${device_name} Voltage"
      id: "${device_id}_voltage"
      accuracy_decimals: 1
      unit_of_measurement: V
      device_class: voltage
      state_class: measurement
    current:
      name: "${device_name} Current"
      id: "${device_id}_current"
      accuracy_decimals: 3
      unit_of_measurement: A
      device_class: current
      state_class: measurement
    power:
      name: "${device_name} Power"
      id: "${device_id}_power"
      unit_of_measurement: W
      device_class: power
      state_class: measurement
      accuracy_decimals: 1
      # filters:
      #   - calibrate_linear:
      #     - 0.0 -> 0.0
      #     - 260.0 -> 240.0
    energy:
      name: "${device_name} Energy Total"
      id: "${device_id}_energy_total"
      device_class: energy
      state_class: total_increasing
      accuracy_decimals: 3
      filters:
        - multiply: 0.001
      unit_of_measurement: kWh
    internal_temperature:
      name: "${device_name} Internal temperature"
      id: "${device_id}_internal_temperature"
      device_class: temperature
      state_class: measurement
      entity_category: diagnostic
      on_value_range:
      - above: ${max_temp}
        then:
          - homeassistant.event:
              event: esphome.overheat
              data:
                title: "${device_name} has overheated."
          - switch.turn_off: "${device_id}_switch"
    update_interval: 10s
  
  - platform: total_daily_energy
    power_id: "${device_id}_power"
    name: "${device_name} Energy Daily"
    id: "${device_id}_energy_daily"
    device_class: energy
    state_class: total_increasing
    accuracy_decimals: 3
    filters:
      - multiply: 0.001
    unit_of_measurement: kWh

output:
  - platform: esp8266_pwm
    id: "${device_id}_state_led"
    pin:
      number: 4
      inverted: true

binary_sensor:
  - platform: gpio
    pin:
      number: 13
      mode:
        input: true
        pullup: true
    device_class: power
    name: "${device_name} Button"
    id: "${device_id}_button"
    filters:
      - delayed_on_off: 50ms # small delay to prevent debouncing
    on_press:
      then:
        - switch.toggle: "${device_id}_switch"
    internal: true
